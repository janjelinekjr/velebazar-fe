openapi: 3.0.0
info:
  version: 1.0.0
  title: Person API
  description: Mock API for Persons

paths:
  /persons:
    get:
      summary: Fetch all persons
      responses:
        '200':
          description: A list of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
    post:
      summary: Create a new person
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPerson'
      responses:
        '201':
          description: Created person details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid input

  /persons/{uiId}:
    get:
      summary: Fetch a single person by uiId
      parameters:
        - name: uiId
          in: path
          required: true
          description: Unique ID of the person
          schema:
            type: string
      responses:
        '200':
          description: Details of the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '404':
          description: Person not found

    put:
      summary: Update a person by uiId
      parameters:
        - name: uiId
          in: path
          required: true
          description: Unique ID of the person
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: Updated person details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid input
        '404':
          description: Person not found

components:
  schemas:
    Person:
      type: object
      properties:
        name:
          type: string
          description: Name of the person
        age:
          type: integer
          format: int32
          description: Age of the person
        email:
          type: string
          format: email
          description: Email address of the person
        uiId:
          type: string
          description: Unique ID of the person
      required:
        - name
        - age
        - email
        - uiId

    NewPerson:
      type: object
      properties:
        name:
          type: string
          description: Name of the person
        age:
          type: integer
          format: int32
          description: Age of the person
        email:
          type: string
          format: email
          description: Email address of the person
      required:
        - name
        - age
        - email
